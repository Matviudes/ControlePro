@model SignUpViewModel


@{
    ViewData["Title"] = "Registre-se";
}

<div class="d-flex flex-column">
    <div class="card mx-auto my-auto w-50">
        <div class="card-body">
            <form class="d-flex flex-column justify-content-between w-100 h-100" asp-action="SignUp">
                <h1 class="text-center h2">
                    Registrar-se
                </h1>

                <hr />

                <div class="form-floating mt-3 form-group">
                    <input asp-for="User" class="form-control" type="text" name="user" id="user" placeholder="user">
                    <label asp-for="User" class="control-label" for="user"></label>
                    <span asp-validation-for="User"></span>
                </div>

                <div class="form-floating mt-3 form-group">
                    <input asp-for="Password" class="form-control" type="password" name="password" id="password" placeholder="password">
                    <label asp-for="Password" class="control-label" for="password"></label>
                    <span asp-validation-for="Password"></span>
                </div>


                <div class="form-floating mt-3 form-group">
                    <input asp-for="ConfirmPassword" class="form-control" type="password" name="confirmPassword" id="confirmPassword" placeholder="confirmPassword">
                    <label asp-for="ConfirmPassword" class="control-label" for="confirmPassword"></label>
                    <span asp-validation-for="ConfirmPassword"></span>
                </div>

                @if (!string.IsNullOrEmpty(Model.Error))
                {
                    <div class="alert alert-danger mt-3 mb-0" role="alert">
                        @Model.Error
                    </div>
                }

                <button class="w-100 btn btn-primary btn-lg mt-3" type="submit">Registrar-se</button>
            </form>
        </div>
    </div>
</div>
